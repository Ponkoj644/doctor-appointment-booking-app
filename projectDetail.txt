Project Prescripto
==================

Project setup
==============
1. Setp the frontend folder with vite.
2. clear the unnecessary code from App.jsx, index.css, App.css file.
3. install the Tailwind css as per instractions.
4. install the dependencies axios, react-router-dom, react-tostify.
5. run the project.
6. copy all the images into the assets folder.

Folder setup
=============
1. into the src create some folders liked components, pages, context(to manage the user login & other context data).

2. for the page routing i use he react-router-dom support (BrowserRouter). for that import the BrowserRouter from react-router-dom & wrape the App component in the main.jsx file.

3. into the pages folder make some pages
    -   About.jsx
    -   Contact.jsx
    -   Doctors.jsx
    -   Home.jsx
    -   Login.jsx
    -   MyAppointments.jsx
    -   MyProfile.jsx (for user profile)
    -   Appointment.jsx (for doctor Appointment)

4. now set all this page route into the App.jsx file.


Navbar Section
===============

1. First make the navigation menu. for that make a component called Navbar.jsx & import this into the app.jsx just before the routing.

2. Design the Navbar component.

3. define the primary color into the tailwind.config file.

4. navigate the all NavLinks to their path.

4. style the navigation underline (hr). its show under which link is active. 

5. Now style the active class for the underline for the active menu link. go to the index.css file & set the active hr style.

6. Now style the button.

7. now add click functionality in this button that redirect to the login page. for that use the "useNavigate" hook. maek a onclick function on the button. 

8. now working on the user login image with profile details. this will show when user is logged in. 

9. for that make 2 state (useState hook) called 'showMenu' & 'token' and use the logic uppon the button. when token true then show the profile details otherwise show the 'create account' button. 
 
10. Design the profile details div.


Header Section
===============
1. Create a new file called 'Header.jsx' into the components folder & mount the file into the Home page.

2. now design the Header.

3. navigate the "Book appointment" button to the specialist section.

4. now cerate a SpecialityMenu.jsx component into the components folder for the Speciality doctor.

5. intigrate this into the home page.

6. now design the SpecialityMenu for the specialist doctors.


Speciality Menu Section
========================
1. First we take the Specialist doctor data form the assets/assets/specialityData.

2. then utilize the date.

3. Let's first designe the SpecialityMenu component. first create the heading.

4. then map the specialityData in this div into a Link.

5. then design the section header & Link. navigate the link into the '/doctors/speciality' by using a dynamic 'to' property with bactics.

6. after that make the scrollbar hidden by uning the webkit pack into the index file.

7. design the img & p tag.

8. add a onclick function to navigate the page with 'speciality' from first in "all-doctors" page. The next section is Top doctors.


====================
Top Doctors Section
====================

1. Make a new component TopDoctors.jsx file into the components folder for the Top doctor section & connect to home page.

2. Design this component.

3. Make a new tailwind class for the 'grid-cols-auto' into the tailwind config file.

4. create a onclick function into the doctor which to navigate the selected doctor by doctor id. for that use the 'useNavigate()' function with the dynamic navigation to doctor id.  



~~~~~~ App Context ~~~~~~~~~~

5. Here we make AppContext.jsx file into the context folder and create a AppContext variable with the help of createContext hook from react to excess data for our whole application.

6. in the AppContext file create AppContextProvider.  function. into this function create a variable called 'value' which is contain the doctor object.

7. now add the context support in our project. for that we use the AppContextProvider in to the main.jsx file. first import the AppContextProvider. then after the BrowserRouter make the AppContextProvider & move the App into this.

8. now go to the TopDoctors, delete the doctor inports from the assets. import the AppContext function from the context/AppContext.

9. just below the useNavigate function i use the useContext function for destructure the doctor object.

10. now go to the More button & add a onclick function to navigate to the all-doctors page.


~~~~~~ Smooth scrolling ~~~~~~~~~~

11. for the smooth scrolling go to the index.html and add a class called "scroll-smooth" into the html element.

12. Now i make the next section called banner.


====================
Top Banner Section
====================
1. For that make a new component called Banner.jsx and import this component into the Home page.

2. This section has 2 parts called left and right side. this section is similer to the header section.

3. Now style this component.

4. Now create the button onclick function to navigate into the login page. here i again se the useNavigate() function.

5. After that i will create next section called  footer section.





Git Repository: https://github.com/Ponkoj644/doctor-appointment-booking-app.git




Link : https://www.youtube.com/watch?v=C3U1RforbH4&t=799s

time: 1.24.34 